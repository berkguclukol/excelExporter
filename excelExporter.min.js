var excelExporter = {};
(function () {
	var k = [], n = [], r = function (b) { for (var c = -1, d = 0; d < n.length; d++) { var f = n[d]; if (f[b]) { c = n.indexOf(f); break } } return c }, u = function (b, c) { for (var d = 0; d < b.length; d++) { for (var f = { key: b[d], parent: c }, a = !1, g = 0; g < k.length; g++) { var e = k[g], e = e.key === f.key && e.parent === f.parent, h = r((0 < f.parent.length ? f.parent + "." : "") + f.key); if (e || 0 < n.length && -1 === h) { a = !0; break } } a || k.push(f) } }, v = function (b, c) { for (var d = -1, f = 0; f < k.length; f++) { var a = k[f]; if (a.key === b && a.parent === c) { d = k.indexOf(a); break } } return d }, w = [], t = function (b,
	c, d, f) {
		for (var a = [], g = 0; g < d.length; g++) {
			var e = d[g], h = c[e], l = r((0 < f.length ? f + "." : "") + e); if ("[object Array]" === Object.prototype.toString.call(h)) {
				var l = Object.keys(h[0]), p = v(e, f); -1 !== p && k.splice(p, 1); u(l, e); for (p = 0; p < h.length; p++) if (0 < n.length) { for (var q = -1, m = 0; m < l.length && (q = r(e + "." + l[m]), -1 === q) ; m++); if (-1 !== q) { m = document.createElement("tr"); for (a = 0; a < q; a++) m.appendChild(document.createElement("td")); a = t(m, h[p], l, e); a.push(m) } } else {
					m = document.createElement("tr"); a = v(l[0], e); for (q = 0; q < a; q++) m.appendChild(document.createElement("td"));
					a = t(m, h[p], l, e); a.push(m)
				}
			} else if ("object" === typeof h) l = Object.keys(h), a = v(e, f), -1 !== a && k.splice(a, 1), u(l, e), a = t(b, h, l, e); else if (0 === n.length || -1 !== l) e = document.createElement("td"), e.innerHTML = h ? h : "", b.appendChild(e)
		} w.concat(a); return w
	}, x = function (b) {
		document.getElementById("container").appendChild(b); b = encodeURIComponent('<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e</head><body><table>{table}</table></body></html>'.replace("{table}",
		b.innerHTML)); var c = document.createElement("a"); c.href = "data:application/vnd.ms-excel;charset=utf-8," + b; c.download = "export.xls"; document.body.appendChild(c); c.click(); document.body.removeChild(c)
	}; this.fromTable = function (b) { b = document.getElementById(b); x(b) }; this.fromJson = function (b, c, d) {
		d && 0 < d.length && (n = d); if ("object" !== typeof b) try { b = JSON.parse(b) } catch (h) { throw h; } k = []; c = b[c]; "[object Array]" === Object.prototype.toString.call(c) ? b = Object.keys(c[0]) : (b = Object.keys(c), c = [c]); u(b, ""); var f = b; b = document.createElement("table");
		b.id = "Hede"; d = []; for (var a = 0; a < c.length; a++) { w = []; var g = document.createElement("tr"), e = t(g, c[a], f, ""); d.push(g); for (g = 0; g < e.length; g++) d.push(e[g]) } for (c = 0; c < d.length; c++) b.appendChild(d[c]); c = b.insertRow(0); for (d = 0; d < k.length; d++) f = document.createElement("td"), a = k[d], a = (0 < a.parent.length ? a.parent + "." : "") + a.key, e = n[r(a)], f.innerText = e ? e[a] : a, c.appendChild(f); x(b)
	}
}).apply(excelExporter);
